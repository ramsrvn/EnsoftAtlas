{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 //get the function node\
var f = functions("
\f1\b dskenq
\f0\b0 ")\
show(f)\
\
//tags associated with f\
f.eval.nodes.one.tags\
\
//attributes associated with f\
f.eval.nodes.one.attr\
\
//Control Flow Graph of function f\
var cfGraph = cfg(f)\
show(cfGraph)\
\
// Control Flow Graph Roots\
Var cfgRoots = cfGraph.roots\
show(cfgRoots)\
\
// Control Flow Graph Leaves\
var cfgLeaves = cfGraph.leaves\
show(cfgLeaves)\
\
Pre Step: select control flow node in the cfg\
//successor nodes of the selected control flow node\
var successors = cfGraph.successors(selected)\
\
Pre Step: select control flow node in the cfg\
//predecessors nodes of the selected control flow node\
var predecessors = cfGraph.predecessors(selected)\
\
//count control flow nodes in cfg\
cfGraph.eval.nodes.size\
\
//count control flow edges in cfg\
cfGraph.eval.edges.size\
\
//IF conditions in the cfg\
var ifConditions = cfGraph.nodes(XCSG.ControlFlowIfCondition) \
show(ifConditions)\
\
//loops in the cfg\
var loops = cfGraph.nodes(XCSG.Loop) \
show(loops)\
\
//call graph of f\
var callGraph = cg(f)\
show(f)\
\
//reverse call graph of f\
var reverseCallGraph = rcg(f)\
show(f)}